#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Service ensure stopped
# @description Ensure that a service is stopped using the appropriate method
# @rename service_stopped
# @deprecated Use [service_stopped](#service_stopped) instead.
#
# @parameter service_name Service
# 
# @class_prefix service_ensure_stopped
# @class_parameter service_name

bundle agent service_ensure_stopped(service_name)
{
  vars:

    "canonified_service_name"      string => canonify("${service_name}");

    "old_class_prefix"             string => "service_ensure_stopped_${canonified_service_name}";
    "promisers"          slist => { @{this.callers_promisers}, cf_null }, policy => "ifdefined";
    "class_prefix"      string => canonify(join("_", "promisers"));
    "args"                          slist => { "${service_name}" };

  methods:

    "action"             usebundle => service_stopped("${service_name}");
    "class copy"         usebundle => _classes_copy("service_stopped_${canonified_service_name}", "${old_class_prefix}"),
                         ifvarclass => "service_stopped_${canonified_service_name}_reached";
    "new result classes" usebundle => _classes_copy("${class_prefix}_action", "${class_prefix}"),
                         ifvarclass => "${class_prefix}_action_reached";
    "report"
        usebundle  => _log("Ensure that service ${service_name} is stopped", "${old_class_prefix}", "${class_prefix}", @{args});

}
