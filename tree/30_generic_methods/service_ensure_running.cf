#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Service ensure running
# @description Ensure that a service is running using the appropriate method
#
# @parameter service_name Service name (as recognized by systemd, init.d, etc...)
# 
# @class_prefix service_ensure_running
# @class_parameter service_name
# This bundle will define a class service_ensure_running_${service_name}_{kept,repaired,not_ok,ok,reached}

bundle agent service_ensure_running(service_name)
{
  vars:
    "promisers"          slist => { @{this.callers_promisers}, cf_null }, policy => "ifdefined";
    "class_prefix"      string => canonify(join("_", "promisers"));
    "args"              slist => { "${service_name}" };

  methods:
    "check running"      usebundle => service_ensure_running_path("${service_name}", "${service_name}");
    "new result classes" usebundle => _classes_copy("${class_prefix}_check_running", "${class_prefix}");

    "report"             usebundle => _log("Ensure that service ${service_name} is running", "", "${class_prefix}", @{args});
}
