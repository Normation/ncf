#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Service check running
# @description Check if a service is running using the appropriate method
#
# @parameter service_name  Process name
# 
# @class_prefix service_check_running
# @class_parameter service_name

bundle agent service_check_running(service_name)
{
  vars:
      "canonified_service_name" string => canonify("${service_name}");
      "old_class_prefix"  string => canonify("service_check_running_${service_name}");
      "args"               slist => { "${service_name}" };
      "report_param"      string => join("_", args);
      "class_prefix"      string => canonify("service_check_running_${report_param}");

  classes:
      "should_report"    expression => "${report_data.should_report}";

  methods:
      "disable_reporting_${old_class_prefix}"     usebundle => disable_reporting;
      "check_active"       usebundle => ncf_services("${service_name}", "is-active");

      "reenable_reporting_${old_class_prefix}"    usebundle => enable_reporting,
                             ifvarclass => "should_report";
      "class copy"         usebundle => _classes_copy("ncf_services_${canonified_service_name}_is_active", "${old_class_prefix}"),
                          ifvarclass => "ncf_services_${canonified_service_name}_is_active_reached";
      "new class copy"     usebundle => _classes_copy("ncf_services_${canonified_service_name}_is_active", "${class_prefix}"),
                          ifvarclass => "ncf_services_${canonified_service_name}_is_active_reached";

      "report"             usebundle => _log("Check if the service ${service_name} is started", "${old_class_prefix}", "${class_prefix}", @{args});
}
