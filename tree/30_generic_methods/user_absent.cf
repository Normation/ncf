#####################################################################################
# Copyright 2015 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name User absent
# @description Remove a user
# @agent_version >=3.6
#
# @parameter login User login
# 
# @class_prefix user_absent
# @class_parameter login
# This bundle will define a class user_absent_${login}_{kept,repaired,not_ok,ok,reached}

bundle agent user_absent(login)
{
  vars:
      "old_class_prefix"  string => canonify("user_absent_${login}");
      "promisers"          slist => { @{this.callers_promisers}, cf_null }, policy => "ifdefined";
      "class_prefix"      string => canonify(join("_", "promisers"));
      "args"               slist => { "${login}" };

  users:
      "${login}"  policy      => "absent",
                  classes     => classes_generic_two("${old_class_prefix}", "${class_prefix}");

  methods:
      "report"
        usebundle => _log("User ${login} absent", "${old_class_prefix}", "${class_prefix}", @{args}),
        ifvarclass => "(!has_promiser_stack.${old_class_prefix}_reached)|(has_promiser_stack.${class_prefix}_reached)";

}
