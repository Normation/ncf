#####################################################################################
# Copyright 2014 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name File remove
# @description Remove a file if it exists
#
# @parameter target     File to remove
#
# @class_prefix file_remove
# @class_parameter target
# This bundle will define a class file_remove_${target}_{kept,repaired,not_ok,ok,reached}

bundle agent file_remove(target)
{
  vars:
    "old_class_prefix" string => canonify("file_remove_${target}");
    "class_prefix"     string => canonify(join("_", "this.callers_promisers"));

  files:
    "${target}"
      delete        => tidy,
      classes       => classes_generic_two("${old_class_prefix}", "${class_prefix}");

  methods:
    "success_if_nothing" usebundle => _classes_success("${old_class_prefix}"),
                         ifvarclass => "!${old_class_prefix}_reached";

    "success_if_nothing" usebundle => _classes_success("${class_prefix}"),
                         ifvarclass => "has_promiser_stack.!${class_prefix}_reached";

    "report"             usebundle => _logger("Remove file ${target}", "${old_class_prefix}");

}
