#####################################################################################
# Copyright 2013-2014 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Service stop
# @description Stop a service using the appropriate method
#
# @parameter service_name Service
# 
# @class_prefix service_stop
# @class_parameter service_name
# This bundle will define a class service_stop_${canonified_service_name}_{kept,repaired,not_ok,ok,reached}

bundle agent service_stop(service_name)
{
  vars:

    "canonified_service_name" string => canonify("${service_name}");

    "old_class_prefix"        string => "service_stop_${canonified_service_name}";
    "promisers"          slist => { @{this.callers_promisers}, cf_null }, policy => "ifdefined";
    "class_prefix"      string => canonify(join("_", "promisers"));
    "args"                     slist => { "${service_name}" };

  methods:

    "stop"      usebundle => service_action("${service_name}", "stop");

    "class copy" usebundle => _classes_copy("service_action_${canonified_service_name}", "${old_class_prefix}");

    "class copy" usebundle => _classes_copy("${class_prefix}_stop", "${class_prefix}");

    "report"     usebundle => _log("Stop service ${service_name}", "${old_class_prefix}", "${class_prefix}", @{args});

}
