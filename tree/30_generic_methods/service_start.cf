#####################################################################################
# Copyright 2013-2014 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Service start
# @description Start a service using the appropriate method
# @deprecated This is an action that should not be used in the general case.
# If you really want to call the start method, use [service_action](#service_action).
# Otherwise, simply call [service_started](#service_started)
# @documentation See [service_action](#service_action) for documentation.
#
# @parameter service_name Name of the service
# 
# @class_prefix service_start
# @class_parameter service_name

bundle agent service_start(service_name)
{
  vars:
    "canonified_service_name" string => canonify("${service_name}");
    "old_class_prefix"        string => "service_start_${canonified_service_name}";
    "args"                     slist => { "${service_name}" };
    "report_param"            string => join("_", args);
    "class_prefix"            string => canonify("service_start_${report_param}");

  classes:
      "should_report"    expression => "${report_data.should_report}";

  methods:
      "disable_reporting_${old_class_prefix}"     usebundle => disable_reporting;

    "start"      usebundle => service_action("${service_name}", "start");

      "reenable_reporting_${old_class_prefix}"    usebundle => enable_reporting,
                             ifvarclass => "should_report";
    "class copy"     usebundle => _classes_copy("service_action_${canonified_service_name}", "${old_class_prefix}");
    "new class copy" usebundle => _classes_copy("service_action_${canonified_service_name}", "${class_prefix}");

    "report"     usebundle => _log("Start service ${service_name}", "${old_class_prefix}", "${class_prefix}", @{args});
}
