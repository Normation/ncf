#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Package install version compare
# @description Install a package or verify if it is installed in a specific version, or higher or lower version than a version specified
#
# @parameter package_name        Name of the package to install or verify
# @parameter version_comparator  Comparator between installed version and defined version, can be ==,<=,>=,<,>,!=
# @parameter package_version     The version of the package to verify (can be "latest" for latest version)
# @parameter action              Action to perform, can be add, verify (defaults to verify)
# 
# @class_prefix package_install
# @class_parameter package_name
# This bundle will define a class package_install_${package_name}_{kept,repaired,not_ok,ok,reached}
# 
# Usage example:
# methods:
#     "any" usebundle => package_install_version_cmp("postgresql", ">=", "9.1", "verify");

bundle agent package_install_version_cmp(package_name, version_comparator, package_version, action)
{
  vars:
      "class_prefix"     string => canonify(join("_", "this.callers_promisers"));

  methods:
      "install or update"  usebundle => package_install_version_cmp_update("${package_name}", "${version_comparator}", "${package_version}", "${action}", "true");
      "new result classes" usebundle => _classes_copy("${class_prefix}_install_or_update", "${class_prefix}");
}
