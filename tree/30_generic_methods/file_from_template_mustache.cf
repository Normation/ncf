#####################################################################################
# Copyright 2014 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name File from a mustache template
# @description This is a bundle to build a file from a mustache template
# @agent_version >=3.6
#
# @parameter source_template Source file containing a template to be expanded
# @parameter destination     Destination file
#
# @class_prefix file_from_template
# @class_parameter destination
# This bundle will define a class file_from_template_${destination}_{kept,repaired,not_ok,ok,reached}

bundle agent file_from_template_mustache(source_template, destination)
{
  vars:
    "promisers"          slist => { @{this.callers_promisers}, cf_null }, policy => "ifdefined";
    "class_prefix"      string => canonify(join("_", "promisers"));
    "args"              slist => { "${source_template}", "${destination}" };

  methods:
    "file template mustache type"  usebundle => file_from_template_type("${source_template}", "${destination}", "mustache");
    "new result classes"           usebundle => _classes_copy("${class_prefix}_file_template_mustache_type", "${class_prefix}");

    "report"                       usebundle => _log("Build file ${destination} from template ${source_template}", "", "${class_prefix}", @{args});
}
