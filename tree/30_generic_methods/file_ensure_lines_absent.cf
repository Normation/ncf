#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name File ensure lines absent
# @description This is a bundle to ensure that a line is absent in a specific location
#
# @parameter file File name to edit
# @parameter lines Line(s) to remove in the file
#
# @class_prefix file_ensure_lines_absent
# @class_parameter file
# This bundle will define a class file_ensure_lines_absent_${file}_{kept,repaired,not_ok,ok,reached}

bundle agent file_ensure_lines_absent(file, lines)
{
  vars:
      "old_class_prefix" string => canonify("file_ensure_lines_absent_${file}");
      "class_prefix"     string => canonify(join("_", "this.callers_promisers"));

  files:
      "${file}"
        create        => "false",
        edit_line     => delete_lines_matching("${lines}"),
        edit_defaults => no_backup,
        classes       => classes_generic_two("${old_class_prefix}", "${class_prefix}");

  methods:
      "report"             usebundle => _logger("Ensure line(s) '${lines}' absent from ${file}", "${old_class_prefix}");
}
