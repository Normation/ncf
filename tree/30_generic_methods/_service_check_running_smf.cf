#####################################################################################
# Copyright 2015 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Service check running with SMF
# @description Check if a service is running using SMF (Solaris Service Management Facility)
#
# @parameter service_name Service name in SMF
#
# @class_prefix service_check_running
# @class_parameter service_name
# @deprecated Use [service_check_running](#service_check_running) instead.
# @rename service_check_running

bundle agent _service_check_running_smf(service_name)
{
  vars:
      "canonified_service_name"   string => canonify("${service_name}");

      "old_class_prefix"    string => canonify("service_check_running_${service_name}");
      "promisers"            slist => { @{this.callers_promisers}, cf_null }, policy => "ifdefined";
      "class_prefix"        string => canonify(join("_", "promisers"));
      "args"                 slist => { "${service_name}" };


  classes:
      "should_report"    expression => "${report_data.should_report}";

  methods:
      "disable_reporting"     usebundle => disable_reporting;


      "check_if_service_is_running" usebundle => service_check_running("${service_name}");


      "reenable_reporting"    usebundle => enable_reporting,
                             if => "should_report";
      "report"
        usebundle  => _log("Check if the service ${service_name} is started using SMF", "${old_class_prefix}", "${class_prefix}", @{args});
}
