#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Package verify version
# @description Verify if a package is installed in a specific version
#
# @parameter package_name    Name of the package to verify
# @parameter package_version Version of the package to verify (can be "latest" for latest version)
#
# @class_prefix package_install
# @class_parameter package_name
# This bundle will define a class package_install_${package_name}_{kept,repaired,not_ok,ok,reached}

bundle agent package_verify_version(package_name, package_version)
{
  vars:
      "promisers"          slist => { @{this.callers_promisers}, cf_null }, policy => "ifdefined";
      "class_prefix"      string => canonify(join("_", "promisers"));
      "args"              slist => { "${package_name}", "${package_name}" };

  methods:
    "package verify"     usebundle => package_install_version_cmp("${package_name}", "==", "${package_version}", "verify");
    "new result classes" usebundle => _classes_copy("${class_prefix}_package_verify", "${class_prefix}");

    "report"             usebundle => _log("Verify that package ${package_name} is installed in version ${package_version}", "", "${class_prefix}", @{args});
}
