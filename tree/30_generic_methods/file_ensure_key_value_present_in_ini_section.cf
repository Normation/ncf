#####################################################################################
# Copyright 2015 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name File ensure key-value in INI section
# @description This is a bundle to ensure that a key-value pair is present in a section in a specific location. The objective of this method is to handle INI-style files.
#
# @parameter file File name to edit
# @parameter section Name of the INI-style section under which the line should be added or modified (not including the [] brackets)
# @parameter name Name of the key to add or edit
# @parameter value Value of the key to add or edit
#
# @class_prefix file_ensure_key_value_present_in_ini_section
# @class_parameter file

bundle agent file_ensure_key_value_present_in_ini_section(file, section, name, value)
{
  vars:
      "old_class_prefix" string => canonify("file_ensure_key_value_present_in_ini_section_${file}");
      "promisers"          slist => { @{this.callers_promisers}, cf_null }, policy => "ifdefined";
      "class_prefix"      string => canonify(join("_", "promisers"));
      "args"              slist => { "${file}", "${section}", "${name}", "${value}" };

      "content[${section}][${name}]" string => "${value}";

  files:
      "${file}"
        create        => "true",
        edit_line     => set_variable_values_ini("file_ensure_key_value_present_in_ini_section.content", "${section}"),
        edit_defaults => ncf_empty_select("false"),
        classes       => classes_generic_two("${old_class_prefix}", "${class_prefix}"),
        comment       => "Editing file ${file} to set ${name} = ${value} in section ${section}";

  methods:
      "sanitize" usebundle => _classes_sanitize("${class_prefix}");
      "sanitize" usebundle => _classes_sanitize("${old_class_prefix}");
      "report"   usebundle  => _log("Set line ${name}=${value} in section ${section} into ${file}", "${old_class_prefix}", "${class_prefix}", @{args});
}

