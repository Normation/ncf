#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# Config
# This bundle will read the ncf specific configuration and expose it as CFEngine variables
# Conventions:
#   The variables will be usable in the context configuration.variablename
# @parameter configuration_filename the name of the configuration file. If empty, the default ncf.conf
# will be used
bundle agent configuration(configuration_filename)
{

  vars:
    iteration_1::
      "ncf_configuration_basedir" string => dirname("${this.promise_filename}");

      "ncf_configuration_file"    string => "${ncf_configuration_basedir}/../${configuration_filename}";

      # Read all entries from the configuration file
      "num_entries"                  int => readstringarray("ncf_config","${ncf_configuration_file}","#[^\n]*","=",100,8000);

      # See ncf.conf for reference about these variables
      "enabled_loggers"             slist => splitstring("${ncf_config[loggers][1]}",",","10");
      "cfengine_port"              string => "${ncf_config[cfengine_port][1]}";

      # Constants
      "error"                     string => "[ERROR]";
      "info"                      string => "[INFO] ";
      "debug"                     string => "[DEBUG]";
      "trace"                     string => "[TRACE]";

  defaults:
      "configuration_filename" string => "ncf.conf", if_match_regex => "";

  classes:
    "iteration_1" expression => "any";

}
