#####################################################################################
# Copyright 2016 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# Initialization
# This bundle will make necessary steps to prepare ncf before running any configuration
# It needs to be called just after loading ncf and its configuration.
bundle agent initialization
{

  files:
      "${sys.workdir}/modules"
        # We cannot use ${me.framework_path} as it is specific to ncf promises.cf and we should have
        # a more general solution, in particular when calling ncf from an existing promises.cf
        copy_from         => local_dcp("${this.promise_dirname}/modules"),
        depth_search      => recurse("inf"),
        perms             => m("700"),
        action            => immediate,
        move_obstructions => "true",
        classes           => classes_generic("ncf_internals_modules_update"),
        comment           => "Update the ncf modules in CFEngine's workdir from ncf sources";

  methods:
      # the ncf_init_* classes can be used to get the agregated result of ncf intialization
      "copy classes for reporting" usebundle => _classes_copy("ncf_internals_modules_update", "ncf_init");

  reports:
    cfengine::
      "${configuration.info} Starting CFEngine ${sys.cf_version} on host ${sys.fqhost} (${sys.flavour} ${sys.arch})";
    trace::
      "${configuration.trace} File read from 10_ncf_internals: ${inputs.ncf_internals_files}";
      "${configuration.trace} File read from 20_cfe_basics, 30_generic_methods, 40_it_ops_knowledge: ${inputs.generic_framework_files}";
      "${configuration.trace} File read from 50_techiques: ${inputs.techniques_files}";
      "${configuration.trace} File read from 60_services: ${inputs.services_files}";

}
