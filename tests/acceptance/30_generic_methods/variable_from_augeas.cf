 #######################################################
#
# Read a file into a string
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    "tmp"  string => getenv("TEMP", 1024); 
    "file" string => "/etc/passwd";
    "lens" string => "Passwd";
    "path" string => "etc/passwd/root/uid";
}

#######################################################

bundle agent test
{
  methods:
    "ph1" usebundle => variable_from_augeas("prefix", "var1", "${init.path}", "${init.lens}", "${init.file}");
    "ph2" usebundle => variable_from_augeas("prefix", "var2", "${init.path}", "", "");

}

#######################################################

bundle agent check
{
  classes:
    
    "ok_1" expression => "variable_from_augeas_var1_kept.!variable_from_augeas_var1_repaired.!variable_from_augeas_var1_error";
    "ok_2" expression => "variable_from_augeas_var2_kept.!variable_from_augeas_var2_repaired.!variable_from_augeas_var2_error";
    "ok_var1" expression => isvariable("prefix.var1");
    "ok_var2" expression => isvariable("prefix.var2");
    "ok_var1_cont" expression => strcmp("${prefix.var1}"," 0");
    "ok_var2_cont" expression => strcmp("${prefix.var2}"," 0");

    "ok"  expression => "ok_1.ok_var1.ok_var1_cont.ok_2.ok_var2.ok_var2_cont";
  
  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}

