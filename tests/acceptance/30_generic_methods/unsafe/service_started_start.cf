#######################################################
#
# Manually stop service, start it using ncf and check 
# if it's been started
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    !aix::
      "service_name"  string => "cron";
    aix::
      "service_name"  string => "syslogd";

  commands:
    "/usr/sbin/service ${service_name} stop";
}

#######################################################

bundle agent test
{
  methods:
    "ph1" usebundle => service_started("${init.service_name}");
}

#######################################################

bundle agent check
{
  vars:
    "command_ps" string => "/bin/ps afux | /bin/grep ${init.service_name} | /bin/grep -v grep";

  classes:
      "service_running" expression => returnszero("${command_ps}", "useshell"),
                        ifvarclass => "service_started_${init.service_name}_reached";

      "ok"              expression => "service_running.(service_started_${init.service_name}_repaired.!service_started_${init.service_name}_error)";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
    !service_running::
      "Service ${init.service_name} was not detected as running using ${command_ps} command";

}
