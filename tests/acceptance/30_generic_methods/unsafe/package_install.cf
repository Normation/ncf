#######################################################
#
# Install the htop package
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    "package_name_1"            string => "htop";
    "canonified_package_name_1" string => canonify("${package_name}");
    "package_name_2"            string => "tree";
    "canonified_package_name_2" string => canonify("${package_name}");
}

#######################################################

bundle agent test
{
  methods:
    "ph1" usebundle => package_install("${init.package_name_1}");
    "ph2" usebundle => package_install_version_cmp_update_arch("${init.package_name_2}","==","latest","add","true","i586");
}

#######################################################

bundle agent check
{
  classes:
    "ok_pkg_1" expression => "package_install_${init.canonified_package_name_1}_ok.!package_install_${init.canonified_package_name_1}_error";
    "ok_pkg_2" expression => "package_install_${init.canonified_package_name_2}_ok.!package_install_${init.canonified_package_name_2}_error";
    "ok"       and => {"ok_pkg_1", "ok_pkg_2"};

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}
