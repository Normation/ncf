# Create the list of all the base file to load to test
# It requires the NCF_TREE environment variable to be defined
bundle common ncf_inputs
{
  vars:
      "ncf_tree" string => getenv("NCF_TREE", 1024);

      # Almost same as promises.cf, but only load necessary parts
      "list_compatible_inputs" string => "/bin/sh ${ncf_tree}/10_ncf_internals/list-compatible-inputs";
      "capability_file"        string => "/opt/rudder/etc/agent-capabilities";

      "generic_framework"      string => execresult("${list_compatible_inputs} --capability-file ${capability_file} --agent-version ${sys.cf_version} --ncf-path ${ncf_tree} 10_ncf_internals 20_cfe_basics 30_generic_methods 40_it_ops_knowledge", "useshell");

      "default_files_relative" slist => splitstring("${generic_framework}", "\n", 10000);
      "default_files"         slist => maplist("${ncf_tree}/${this}", default_files_relative);

}

bundle common test_utils {

  vars:
    have_perl::
      "file_perms" string => "${paths.perl} -e 'printf \"%03o\\n\", (stat)[2] & 07777, $_ for @ARGV'";
      "file_owner" string => "${paths.perl} -e 'printf \"%d\\n\", (stat)[4], $_ for @ARGV'";
      "file_group" string => "${paths.perl} -e 'printf \"%d\\n\", (stat)[5], $_ for @ARGV'";
    test_utils_pass2.!have_perl::
      "file_perms" string => "/usr/bin/stat -c %a ${file}";
      "file_owner" string => "/usr/bin/stat -c %u ${file}";
      "file_group" string => "/usr/bin/stat -c %g ${file}";

  classes:
      "have_perl" expression => fileexists("${paths.perl}");
      "test_utils_pass2"     expression => "any";
}
